import React, { useState } from "react";
import Alert from "./components/Alert.jsx";
import AuthModal from "./components/AuthModal.jsx";
import UserPanel from "./components/UserPanel.jsx";
import OCRProcessor from "./components/OCRProcessor.jsx";
import axios from "axios";
import FileList from "./FileList";
import "./css/main.css";

export default function App() {
  const [alertMessage, setAlertMessage] = useState("");
  const [alertType, setAlertType] = useState("");
  const [alertHidden, setAlertHidden] = useState(false);
  const [showModal, setShowModal] = useState(false);
  const [modalType, setModalType] = useState("");
  const [authUser, setAuthUser] = useState({ username: "", email: "", password: "" });
  const [loggedInUser, setLoggedInUser] = useState(null); // üîπ Bejelentkezett felhaszn√°l√≥ √°llapota
  const [ocrText, setOcrText] = useState(""); // OCR-b√≥l kapott sz√∂veg t√°rol√°sa

  const showAlert = (message, type) => {
    setAlertMessage(message);
    setAlertType(type);
    setAlertHidden(false); // Megjelen√≠tj√ºk az √ºzenetet

    setTimeout(() => {
      setAlertHidden(true); // Elind√≠tjuk a fade-out anim√°ci√≥t

      // 500ms ut√°n (a CSS anim√°ci√≥ befejez√©se ut√°n) t√∂r√∂lj√ºk az √ºzenetet
      setTimeout(() => {
        setAlertMessage("");
        setAlertType("");
      }, 500);
    }, 3000); // 3 m√°sodperc ut√°n kezd≈ëdik a fade-out
  };

  const openModal = (type) => {
    setModalType(type);
    setShowModal(true);
  };

  const closeModal = () => {
    setShowModal(false);
  };

  // üîπ Bejelentkez√©si f√ºggv√©ny
  const handleLogin = async () => {
    if (!authUser.username || !authUser.password) {
      showAlert("K√©rlek t√∂lts ki minden mez≈ët!");
      return;
    }

    try {
      const formData = new URLSearchParams();
      formData.append("username", authUser.username);
      formData.append("password", authUser.password);

      const response = await axios.post(
        "https://www.kacifant.hu/andris/login.php",
        formData,
        { headers: { "Content-Type": "application/x-www-form-urlencoded" } }
      );


      if (response.data.includes("login-success")) {
        setLoggedInUser(authUser.username); // Be√°ll√≠tja a felhaszn√°l√≥ nev√©t
        closeModal();
      }
      if (response.data.includes("password-error"))
      {
        showAlert("Hib√°s felhaszn√°l√≥n√©v vagy jelsz√≥!", "alert-error");
      }
    } catch (error) {
      showAlert("Hiba t√∂rt√©nt a bejelentkez√©s sor√°n", "alert-error");

    }
  };

  // üîπ Regisztr√°ci√≥s f√ºggv√©ny (opcion√°lisan friss√≠theti az √°llapotot)
  const handleRegister = async () => {
    if (!authUser.username || !authUser.email || !authUser.password) {
      showAlert("K√©rlek t√∂lts ki minden mez≈ët!");
      return;
    }

    if (authUser.password.length < 8)
    {
      showAlert("A jelsz√≥nak legal√°bb 8 karakternek kell lennie!", "alert-error");
      return "invalidPassword";
    }
    if (!/[A-Z]/.test(authUser.password)) {
      showAlert("A jelsz√≥nak tartalmaznia kell legal√°bb egy nagybet≈±t!", "alert-error");
      return "invalidPassword";
    }

    if (!/\d/.test(authUser.password)) {
      showAlert("A jelsz√≥nak tartalmaznia kell legal√°bb egy sz√°mot.", "alert-error");
      return "invalidPassword";
    }

    try {
      const formData = new URLSearchParams();
      formData.append("username", authUser.username);
      formData.append("email", authUser.email);
      formData.append("password", authUser.password);

      const response = await axios.post(
        "https://www.kacifant.hu/andris/register.php",
        formData,
        { headers: { "Content-Type": "application/x-www-form-urlencoded" } }
      );

      showAlert(response.data);
      if (response.data.includes("Duplicate"))
      {
        if (response.data.includes("username"))
        {
          showAlert("A felhaszn√°l√≥n√©v m√°r foglalt!", "alert-error");
          return "invalidUsername";
        }
        if (response.data.includes("email"))
        {
          showAlert("A megadott email c√≠m m√°r foglalt!", "alert-error")
          return "invalidEmail"
        }
      }



      if (response.data.includes("success-registration")) {
        closeModal();
      }
    } catch (error) {
      showAlert("Hiba t√∂rt√©nt a regisztr√°ci√≥ sor√°n" + error);
    }
  };

  // üîπ OCR sz√∂veg felt√∂lt√©si f√ºggv√©ny
  const handleUploadText = async () => {
    if (!ocrText) {
      showAlert("Nincs felt√∂ltend≈ë sz√∂veg!", "alert-error");
      return;
    }

    // Ha nincs bejelentkezve vagy nincs megadva email, akkor default emailt haszn√°lunk
    const email = loggedInUser && authUser.email ? authUser.email : "default@default.com";

    try {
      const formData = new URLSearchParams();
      formData.append("email", email);
      formData.append("szoveg", ocrText);

      const response = await axios.post(
        "https://www.kacifant.hu/andris/upload_saved_file.php",
        formData,
        { headers: { "Content-Type": "application/x-www-form-urlencoded" } }
      );

      showAlert(response.data);
    } catch (error) {
      showAlert("Hiba a felt√∂lt√©s sor√°n: " + error.message, "alert-error");
    }
  };

  return (
    <div className="app-container">
      <Alert message={alertMessage} type={alertType} alertHidden={alertHidden} />
      <UserPanel 
        loggedInUser={loggedInUser} 
        handleLogout={() => setLoggedInUser(null)} 
        openModal={openModal} 
      />
      <FileList loggedInUser={loggedInUser} />
      {/* Az OCRProcessor be√°ll√≠tja az OCR-b√≥l kapott sz√∂veget */}
      <OCRProcessor showAlert={showAlert} setOcrText={setOcrText} loggedInUser={loggedInUser}  />
      <AuthModal 
        showModal={showModal} 
        modalType={modalType} 
        closeModal={closeModal} 
        authUser={authUser} 
        handleAuthChange={(e) => setAuthUser({ ...authUser, [e.target.name]: e.target.value })}
        handleLogin={handleLogin}  // üîπ √Åtadjuk az AuthModal-nak
        handleRegister={handleRegister}  // üîπ √Åtadjuk az AuthModal-nak
      />
    </div>
  );
}
